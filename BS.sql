SET SERVEROUTPUT ON; 


CREATE OR REPLACE PACKAGE BODY INSERSION_TABLAS AS
    

END INSERSION_TABLAS;



CREATE OR REPLACE PACKAGE VALIDACION_CREDITOS AS

   
    FUNCTION CREDITO_HIPOTECARIO(
        P_INGRESO MONTO_INGRESO.ingreso%TYPE, 
        P_COD_TIPO_CLIENTE TIPO_CLIENTE.COD_TIPO_CLIENTE%TYPE
    )
    RETURN BOOLEAN;

    
    FUNCTION CREDITO_CONSUMO(
        P_INGRESO MONTO_INGRESO.ingreso%TYPE
    )
    RETURN BOOLEAN;
    
    
    FUNCTION CREDITO_AUTOMOTRIZ(
        P_INGRESO MONTO_INGRESO.ingreso%TYPE, 
        P_COD_TIPO_CLIENTE TIPO_CLIENTE.COD_TIPO_CLIENTE%TYPE
    )
    RETURN BOOLEAN;
    
  
    FUNCTION CREDITO_EMERGENCIA(
        P_INGRESO MONTO_INGRESO.ingreso%TYPE, 
        P_COD_TIPO_CLIENTE TIPO_CLIENTE.COD_TIPO_CLIENTE%TYPE
    )
    RETURN BOOLEAN;
    
    
    FUNCTION CREDITO_PAGO_ARANCEL(
        P_INGRESO MONTO_INGRESO.ingreso%TYPE, 
        P_COD_TIPO_CLIENTE TIPO_CLIENTE.COD_TIPO_CLIENTE%TYPE
    )
    RETURN BOOLEAN;
    
END VALIDACION_CREDITOS;
/



CREATE OR REPLACE PACKAGE BODY VALIDACION_CREDITOS AS

    FUNCTION CREDITO_HIPOTECARIO(P_INGRESO MONTO_INGRESO.ingreso%type, P_COD_TIPO_CLIENTE TIPO_CLIENTE.COD_TIPO_CLIENTE%TYPE)        
    
        RETURN BOOLEAN
    IS
        
        
    BEGIN
        RETURN (P_INGRESO >= 1500000) AND (P_COD_TIPO_CLIENTE IN (1,2));
    END CREDITO_HIPOTECARIO;
    
    FUNCTION CREDITO_CONSUMO(P_INGRESO MONTO_INGRESO.ingreso%type)        
    
        RETURN BOOLEAN
    IS
        
        
    BEGIN
        RETURN (P_INGRESO >= 900000);
    END CREDITO_CONSUMO;
    
    
    FUNCTION CREDITO_AUTOMOTRIZ(P_INGRESO MONTO_INGRESO.ingreso%type, P_COD_TIPO_CLIENTE TIPO_CLIENTE.COD_TIPO_CLIENTE%TYPE)        
    
        RETURN BOOLEAN
    IS
        
        
    BEGIN
        RETURN (P_INGRESO >= 900000) AND (P_COD_TIPO_CLIENTE IN (1,2));
    END CREDITO_AUTOMOTRIZ; 
         
         
     FUNCTION CREDITO_EMERGENCIA(P_INGRESO MONTO_INGRESO.ingreso%type, P_COD_TIPO_CLIENTE TIPO_CLIENTE.COD_TIPO_CLIENTE%TYPE)        
    
        RETURN BOOLEAN
    IS
        
        
    BEGIN
        RETURN ((P_INGRESO >= 900000) AND (P_COD_TIPO_CLIENTE IN (1, 2))) OR ((P_INGRESO >= 150000) AND (P_COD_TIPO_CLIENTE IN (3)));
    
    END CREDITO_EMERGENCIA; 
    
    FUNCTION CREDITO_PAGO_ARANCEL(P_INGRESO MONTO_INGRESO.ingreso%type, P_COD_TIPO_CLIENTE TIPO_CLIENTE.COD_TIPO_CLIENTE%TYPE)        
    
        RETURN BOOLEAN
    IS
        
        
    BEGIN
        RETURN (P_INGRESO >= 900000) AND (P_COD_TIPO_CLIENTE IN (1,2));
    END CREDITO_PAGO_ARANCEL;
         
           
    
END VALIDACION_CREDITOS;
/

DECLARE

    V_COD_MONTO_INGRESO MONTO_INGRESO.cod_monto_ingreso%type;
    V_INGRESO MONTO_INGRESO.ingreso%type;
    V_N_TIPO_CLIENTE TIPO_CLIENTE.cod_tipo_cliente%type;
    
    V_RESULTADO_HIPOTECARIO BOOLEAN;
    V_RESULTADO_CONSUMO BOOLEAN;
    V_RESULTADO_AUTOMOTRIZ BOOLEAN;
    V_RESULTADO_EMERGENCIA BOOLEAN;
    V_RESULTADO_ARANCEL BOOLEAN;

      CURSOR CUR_INGRESO IS
        SELECT 
            MI.COD_MONTO_INGRESO, MI.INGRESO, TC.COD_TIPO_CLIENTE
        INTO V_COD_MONTO_INGRESO,V_INGRESO,V_N_TIPO_CLIENTE
        FROM MONTO_INGRESO MI
        JOIN CLIENTE C ON C.COD_MONTO_INGRESO = MI.COD_MONTO_INGRESO
        JOIN TIPO_CLIENTE TC ON TC.COD_TIPO_CLIENTE = C.COD_TIPO_CLIENTE;


    

    BEGIN
        FOR I IN CUR_INGRESO
            LOOP
                
            
            
            END LOOP;
        
    
END;
/





CREATE TABLE MONTO_INGRESO(
    COD_MONTO_INGRESO NUMBER(5,0)PRIMARY KEY,
    INGRESO NUMBER(20),
    NRO_CLIENTE NUMBER(5,0),
    FOREIGN KEY(NRO_CLIENTE) REFERENCES CLIENTE(NRO_CLIENTE),
    UNIQUE(NRO_CLIENTE)
)


CREATE TABLE ESTADO_CREDITO_CLIENTE (
    COD_ESTADO_CREDITO_CLIENTE NUMBER(5,0) PRIMARY KEY,
    ESTADO_HIPOTECARIO NUMBER(1,0), //1 = TRUE 0 = FALSE
    ESTADO_CONSUMO NUMBER(1,0),
    ESTADO_AUTOMOTRIZ NUMBER(1,0),
    ESTADO_EMERGENCIA NUMBER(1,0),
    ESTADO_ARANCEL NUMBER(1,0),
    NRO_CLIENTE NUMBER(5,0),
    FOREIGN KEY(NRO_CLIENTE) REFERENCES CLIENTE(NRO_CLIENTE),
    UNIQUE(NRO_CLIENTE)
);

CREATE SEQUENCE SEQ_ID_MONTO_INGRESO
START WITH 1      
INCREMENT BY 1    
NOCACHE;

CREATE OR REPLACE TRIGGER TRG_SEQ_ID_MONTO_INGRESO
BEFORE INSERT ON MONTO_INGRESO

    FOR EACH ROW
        BEGIN 
            IF :NEW.COD_MONTO_INGRESO IS NULL THEN
                SELECT SEQ_ID_MONTO_INGRESO.NEXTVAL 
                INTO :NEW.COD_MONTO_INGRESO
                FROM DUAL; //<--SOLO PARA SINTAXIS
            END IF;
END;






